name: Run Laravel tests

on:
    push:
        branches: [dev, prototype]
    pull_request:
        branches: [dev, prototype]

jobs:
    laravel-tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                php: [8.0, 8.1]

        name: tests - PHP ${{ matrix.php }}

        steps:
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
            - uses: actions/checkout@v2
            - name: Cache Composer packages
              uses: actions/cache@v2
              with:
                  path: vendor
                  key: php-${{ hashFiles('**/composer.lock') }}
            - name: Create test database
              run: |
                  sudo systemctl start mysql.service
                  mysqladmin create accessibilityexchange --user="root" --password="root"
            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
            - name: Generate key
              run: php artisan key:generate
            - name: Directory Permissions
              run: chmod -R 777 storage bootstrap/cache
            - name: Execute tests (Unit and Feature tests) via PHPUnit
              env:
                  DB_PASSWORD: root
                  DB_HOST: localhost
              run: |
                  php artisan migrate
                  php artisan storage:link
                  composer test-coverage
              if: ${{ matrix.php == 8.0 }}
            - name: Execute tests (Unit and Feature tests) via PHPUnit
              env:
                  DB_PASSWORD: root
                  DB_HOST: localhost
              run: |
                  php artisan migrate
                  php artisan storage:link
                  composer test
              if: ${{ matrix.php != 8.0 }}
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v2
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: true
              if: ${{ matrix.php == 8.0 }}
