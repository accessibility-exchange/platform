name: Run Laravel tests

on:
  push:
    branches: [ dev, prototype ]
  pull_request:
    branches: [ dev, prototype ]

jobs:
  laravel-tests:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        php: [8.0, 8.1]

    services:
      mysql:
        image: mysql:5.7
        env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: accessibilityexchange
        ports:
            - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    name: PHP ${{ matrix.php }} - ${{ matrix.os }}

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
    - uses: actions/checkout@v2
    - name: Cache Composer packages
      uses: actions/cache@v2
      with:
        path: vendor
        key: php-${{ hashFiles('**/composer.lock') }}

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_PASSWORD: root
        DB_HOST: localhost
      run: |
        php artisan migrate
        php artisan storage:link
        vendor/bin/phpunit --coverage-clover coverage.xml
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.php == 8.0 }}
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_PASSWORD: ''
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: |
        php artisan migrate
        php artisan storage:link
        vendor/bin/phpunit
      if: ${{ matrix.os != 'ubuntu-latest' || matrix.php != 8.0 }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.php == 8.0 }}
